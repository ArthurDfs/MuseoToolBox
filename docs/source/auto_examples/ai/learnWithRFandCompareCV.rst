.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_ai_learnWithRFandCompareCV.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_ai_learnWithRFandCompareCV.py:


Learn with Random-Forest and compare Cross-Validation methods
===============================================================

This example shows how to make a classification with different cross-validation methods.


Import librairies
-------------------------------------------


.. code-block:: default


    from museotoolbox.ai import SuperLearner
    from museotoolbox import cross_validation
    from museotoolbox.processing import extract_ROI
    from museotoolbox import datasets
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import StratifiedKFold







Load HistoricalMap dataset
-------------------------------------------


.. code-block:: default


    raster,vector = datasets.load_historical_data(low_res=True)
    field = 'Class'
    group = 'uniquefid'
    X,y,g = extract_ROI(raster,vector,field,group)






Initialize Random-Forest
---------------------------


.. code-block:: default


    classifier = RandomForestClassifier(random_state=12,n_jobs=1)







Create list of different CV
---------------------------


.. code-block:: default


    CVs = [cross_validation.RandomStratifiedKFold(n_splits=2),
           cross_validation.LeavePSubGroupOut(valid_size=0.5),
           cross_validation.LeaveOneSubGroupOut(),
           StratifiedKFold(n_splits=2,shuffle=True) #from sklearn
           ]

    kappas=[]



    for cv in CVs : 
        SL = SuperLearner( classifier=classifier,param_grid=dict(n_estimators=[50,100]),n_jobs=1)
        SL.fit(X,y,group=g,cv=cv)
        print('Kappa for '+str(type(cv).__name__))
        cvKappa = []
    
        for stats in SL.get_stats_from_cv(confusion_matrix=False,kappa=True):
            print(stats['kappa'])
            cvKappa.append(stats['kappa'])
    
        kappas.append(cvKappa)
    
        print(20*'=')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Kappa for RandomStratifiedKFold
    0.9136102352953555
    0.9081857763859844
    ====================
    Kappa for LeavePSubGroupOut
    0.716149986578029
    0.7784153870508153
    ====================
    Kappa for LeaveOneSubGroupOut
    0.7324904111839972
    0.8766842657517363
    ====================
    Kappa for StratifiedKFold
    0.9028082823371615
    0.9150271139567949
    ====================


Plot example


.. code-block:: default



    from matplotlib import pyplot as plt
    plt.title('Kappa according to Cross-validation methods')
    plt.boxplot(kappas,labels=[str(type(i).__name__) for i in CVs], patch_artist=True)
    plt.grid()
    plt.ylabel('Kappa')
    plt.xticks(rotation=15)
    plt.show()



.. image:: /auto_examples/ai/images/sphx_glr_learnWithRFandCompareCV_001.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.210 seconds)


.. _sphx_glr_download_auto_examples_ai_learnWithRFandCompareCV.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: learnWithRFandCompareCV.py <learnWithRFandCompareCV.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: learnWithRFandCompareCV.ipynb <learnWithRFandCompareCV.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
