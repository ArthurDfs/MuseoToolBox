.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_charts_plotConfusionAcc.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_charts_plotConfusionAcc.py:


Plot confusion matrix with User/Producer accuracy
========================================================

Plot confusion matrix from Cross-Validation, with accuracy (user/prod) as subplot.


Import librairies
-------------------------------------------


.. code-block:: default

    from museotoolbox.learn_tools import learnAndPredict
    from museotoolbox.cross_validation import RandomStratifiedKFold
    from museotoolbox.charts import plotConfusionMatrix
    from museotoolbox import datasets
    from sklearn.ensemble import RandomForestClassifier







Load HistoricalMap dataset
-------------------------------------------


.. code-block:: default


    raster,vector = datasets.historicalMap()
    field = 'Class'







Create CV
-------------------------------------------


.. code-block:: default

    RSKF = RandomStratifiedKFold(n_splits=2,
                    random_state=12,verbose=False)







Initialize Random-Forest
---------------------------


.. code-block:: default


    classifier = RandomForestClassifier()







Start learning
---------------------------


.. code-block:: default



    LAP = learnAndPredict()
    LAP.learnFromRaster(raster,vector,field,cv=RSKF,
                        classifier=classifier,param_grid=dict(n_estimators=[10,100]))







Get kappa from each fold
---------------------------


.. code-block:: default

  
    for stats in LAP.getStatsFromCV(confusionMatrix=False,kappa=True):
        print(stats['kappa'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0.9409061471901824
    0.9432905982109672


Get each confusion matrix from folds
-----------------------------------------------


.. code-block:: default

    cms = []
    for stats in LAP.getStatsFromCV(confusionMatrix=True):
        cms.append(stats['confusionMatrix'])
        print(stats['confusionMatrix'])
    




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[3692   67    1   11    0]
     [  87 1043    0   16    0]
     [   2    0 1137    0    0]
     [  12   17    1  232    0]
     [   3    1    0    0    0]]
    [[3682   76    2   11    0]
     [  72 1062    1   11    0]
     [   0    0 1139    0    0]
     [   9   19    3  231    0]
     [   3    0    1    0    0]]


Plot confusion matrix
-----------------------------------------------


.. code-block:: default

    
    import numpy as np

    # a bug in Sphinx doesn't show the whole plot, sorry.

    labels = ['Forest','Agriculture','Bare soil','Water','Building']
    from matplotlib.pyplot import cm as colorMap
    meanCM = np.mean(cms,axis=0).astype(np.int16)
    pltCM = plotConfusionMatrix(meanCM.T) # Translate for Y = prediction and X = truth
    pltCM.addText()
    pltCM.addXlabels(labels,rotation=90)
    pltCM.addYlabels(labels)
    pltCM.colorDiag(diagColor=colorMap.Purples,matrixColor=colorMap.Reds)
    pltCM.addAccuracy()




.. image:: /auto_examples/charts/images/sphx_glr_plotConfusionAcc_001.png
    :class: sphx-glr-single-img




Plot confusion matrix and normalize per class
-----------------------------------------------


.. code-block:: default


    # a bug in Sphinx doesn't show the whole plot, sorry.

    meanCM = meanCM.astype('float') / meanCM.sum(axis=1)[:, np.newaxis]*100
    pltCM = plotConfusionMatrix(meanCM.astype(int).T)
    pltCM.addText(alpha_zero=0.3) # in order to hide a little zero values
    pltCM.addXlabels(labels)
    pltCM.addYlabels(labels)
    pltCM.colorDiag(diagColor=colorMap.Purples,matrixColor=colorMap.Greys)
    pltCM.addMean('Mean per Y','Mean per X')


.. image:: /auto_examples/charts/images/sphx_glr_plotConfusionAcc_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.580 seconds)


.. _sphx_glr_download_auto_examples_charts_plotConfusionAcc.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plotConfusionAcc.py <plotConfusionAcc.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plotConfusionAcc.ipynb <plotConfusionAcc.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
