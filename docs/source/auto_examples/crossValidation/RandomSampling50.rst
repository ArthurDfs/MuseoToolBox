.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_crossValidation_RandomSampling50.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_crossValidation_RandomSampling50.py:


Random Sampling 50% (RS50)
======================================================

This example shows how to make a Random Sampling with 
50% for each class.



Import librairies
-------------------------------------------



.. code-block:: python


    from MuseoToolBox.crossValidationTools import RandomCV
    from MuseoToolBox import datasets,rasterTools,vectorTools







Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'
    y = vectorTools.readValuesFromVector(vector,field)







Create CV
-------------------------------------------



.. code-block:: python

    RS50 = RandomCV(train_size=0.5,n_splits=10,
                    random_state=12,verbose=False)
    for tr,vl in RS50.split(X=None,y=y):
        print(tr,vl)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [ 0  7  1  5  9 14 12 11] [ 2  3  8  4  6 15 16 10 13]
    [ 2  3  8  4  6 15 16 10 13] [ 0  1  7  5  9 14 12 11]
    [ 8  1  2  9  4 15 12 11] [ 0  3  7  5  6 14 16 10 13]
    [ 0  3  7  5  6 14 16 10 13] [ 1  2  8  4  9 15 12 11]
    [ 0  2  3  9  6 16 12 13] [ 1  7  8  4  5 14 15 10 11]
    [ 1  7  8  4  5 14 15 10 11] [ 0  2  3  6  9 16 12 13]
    [ 8  7  1  9  4 15 12 13] [ 0  2  3  5  6 14 16 10 11]
    [ 0  2  3  5  6 14 16 10 11] [ 1  7  8  4  9 15 12 13]
    [ 1  7  0  6  9 14 12 13] [ 2  3  8  4  5 15 16 10 11]
    [ 2  3  8  4  5 15 16 10 11] [ 0  1  7  6  9 14 12 13]


Show label



.. code-block:: python

    for tr,vl in RS50.split(X=None,y=y):
        print(y[tr],y[vl])
    




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [1 1 1 2 2 3 4 5] [1 1 1 2 2 3 3 4 5]
    [1 1 1 2 2 3 3 4 5] [1 1 1 2 2 3 4 5]
    [1 1 1 2 2 3 4 5] [1 1 1 2 2 3 3 4 5]
    [1 1 1 2 2 3 3 4 5] [1 1 1 2 2 3 4 5]
    [1 1 1 2 2 3 4 5] [1 1 1 2 2 3 3 4 5]
    [1 1 1 2 2 3 3 4 5] [1 1 1 2 2 3 4 5]
    [1 1 1 2 2 3 4 5] [1 1 1 2 2 3 3 4 5]
    [1 1 1 2 2 3 3 4 5] [1 1 1 2 2 3 4 5]
    [1 1 1 2 2 3 4 5] [1 1 1 2 2 3 3 4 5]
    [1 1 1 2 2 3 3 4 5] [1 1 1 2 2 3 4 5]


.. note::
   The first one is made with polygon only.
   When learning/predicting, all pixels will be taken in account
   TO generate a full X and y labels, extract samples from ROI



.. code-block:: python


    X,y=rasterTools.getSamplesFromROI(raster,vector,field)

    for tr,vl in RS50.split(X,y):
        print(tr.shape,vl.shape)
    
    




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (6322,) (6325,)
    (6325,) (6322,)
    (6322,) (6325,)
    (6325,) (6322,)
    (6322,) (6325,)
    (6325,) (6322,)
    (6322,) (6325,)
    (6325,) (6322,)
    (6322,) (6325,)
    (6325,) (6322,)


Plot example



.. code-block:: python

    import numpy as np
    from matplotlib import pyplot as plt
    plt.scatter(np.random.rand(30),np.random.rand(30),s=100)
    plt.scatter(np.random.rand(30),np.random.rand(30),s=100)
    plt.axis('off')
    plt.show()



.. image:: /auto_examples/crossValidation/images/sphx_glr_RandomSampling50_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  0.131 seconds)


.. _sphx_glr_download_auto_examples_crossValidation_RandomSampling50.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: RandomSampling50.py <RandomSampling50.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: RandomSampling50.ipynb <RandomSampling50.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
