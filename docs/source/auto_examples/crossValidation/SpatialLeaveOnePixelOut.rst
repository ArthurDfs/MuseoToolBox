.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_crossValidation_SpatialLeaveOnePixelOut.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_crossValidation_SpatialLeaveOnePixelOut.py:


Spatial Leave-One-Pixel-Out (SLOPO)
======================================================

This example shows how to make a Spatial Leave-One-Out called here
a Spatial Leave-One-Pixel-Out.

For more information see : https://onlinelibrary.wiley.com/doi/full/10.1111/geb.12161.



Import librairies
^^^^^^^^^^^^^^^^^^^^



.. code-block:: python


    from MuseoToolBox.crossValidationTools import SpatialLeaveOnePixelOut
    from MuseoToolBox import datasets






Load HistoricalMap dataset
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'







Create CV
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 n_splits will be the number  of the least populated class



.. code-block:: python


    SLOPO = SpatialLeaveOnePixelOut(raster,vector,'Class',distanceThresold=100,random_state=12)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Values from 'False' field will be extracted
    Values from 'Class' field will be extracted
    Number of features if different of number of pixels. Please use rasterTools.sampleExtraction if you want to save as vector the Cross-Validation.


.. note::
   There is no need to specify a bandPrefix. 
   If bandPrefix is not specified, scipt will only generate the centroid



.. code-block:: python


    for tr,vl in SLOPO.split():
        print(tr.shape,vl.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (8105,) (5,)
    (10598,) (5,)
    (8710,) (5,)
    (8126,) (5,)
    (9931,) (5,)
    (8898,) (5,)
    (8878,) (5,)
    (8435,) (5,)


Draw image



.. code-block:: python

    import numpy as np
    from matplotlib import pyplot as plt
    fig, ax = plt.subplots()
    plt.ylim(40,150)
    plt.xlim(40,150)


    plt.scatter(np.random.randint(50,150,50),np.random.randint(50,150,50),alpha=.8)
    plt.scatter(80,80, s=80*100,alpha=.8)
    plt.scatter(80,80,color='green',s=60)
    plt.text(82,82,'Validation pixel',size=12)
    plt.text(110,110,'Training pixels',size=12)
    plt.text(46,52,'Buffer of spatial auto-correlated pixels')
    plt.axis('off')

    plt.show()




.. image:: /auto_examples/crossValidation/images/sphx_glr_SpatialLeaveOnePixelOut_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  1.679 seconds)


.. _sphx_glr_download_auto_examples_crossValidation_SpatialLeaveOnePixelOut.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: SpatialLeaveOnePixelOut.py <SpatialLeaveOnePixelOut.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: SpatialLeaveOnePixelOut.ipynb <SpatialLeaveOnePixelOut.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
