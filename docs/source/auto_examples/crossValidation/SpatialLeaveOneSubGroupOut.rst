.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_crossValidation_SpatialLeaveOneSubGroupOut.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_crossValidation_SpatialLeaveOneSubGroupOut.py:


Spatial Leave-One-SubGroup-Out (SLOSGO)
======================================================

This example shows how to make a Spatial Leave-One-Out using subgroup,
called here a Spatial Leave-One-SubGroup-Out.

In this example, it shows how to use just once a raster.



Import librairies
-------------------------------------------



.. code-block:: python


    from MuseoToolBox.crossValidationTools import SpatialLeaveOneSubGroupOut
    from MuseoToolBox import datasets






Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'
    subGroup = 'uniquefid'







Create CV
-------------------------------------------



.. code-block:: python


    SLOSGO = SpatialLeaveOneSubGroupOut(raster,vector,field,subGroup,
                                        distanceThresold=20,
                                        random_state=12,verbose=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Values from 'uniquefid' field will be extracted
    Values from 'Class' field will be extracted
    Values from 'uniquefid' field will be extracted
    Number of features if different of number of pixels. Please use rasterTools.sampleExtraction if you want to save as vector the Cross-Validation.


.. note::
   There is no need to specify a bandPrefix. 
   If bandPrefix is not specified, scipt will only generate the centroid



.. code-block:: python


    for tr,vl in SLOSGO.split():
        print(tr.shape,vl.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    _splits is 2
    (11201,) (3329,)
    (11545,) (4091,)


Draw image



.. code-block:: python

    
    import numpy as np
    from matplotlib import pyplot as plt
    fig, ax = plt.subplots()
    plt.ylim(40,150)
    plt.xlim(40,150)


    plt.scatter(np.random.randint(100,150,50),np.random.randint(100,150,50),alpha=.8)
    plt.scatter(80,80, s=80*100,alpha=.8)
    plt.scatter(80,80,color='green',s=40)
    for i in np.random.randint(72,88,20):
        plt.scatter(i,np.random.randint(72,88),color='green',s=40)
    plt.text(92,82,'Validation pixels\n(same group)',size=12)
    plt.text(100,120,'Training pixels',size=12, ha='right')
    plt.text(46,52,'Buffer of spatial auto-correlated pixels')
    plt.axis('off')

    plt.show()




.. image:: /auto_examples/crossValidation/images/sphx_glr_SpatialLeaveOneSubGroupOut_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  1.981 seconds)


.. _sphx_glr_download_auto_examples_crossValidation_SpatialLeaveOneSubGroupOut.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: SpatialLeaveOneSubGroupOut.py <SpatialLeaveOneSubGroupOut.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: SpatialLeaveOneSubGroupOut.ipynb <SpatialLeaveOneSubGroupOut.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
