.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_learnTools_learnWithRFandCompareCV.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_learnTools_learnWithRFandCompareCV.py:


Learn with Random-Forest and compare Cross-Validation methods
===============================================================

This example shows how to make a classification with different cross-validation methods.



Import librairies
-------------------------------------------



.. code-block:: python


    from museotoolbox.learnTools import learnAndPredict
    from museotoolbox import crossValidation
    from museotoolbox import datasets
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import StratifiedKFold







Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'
    group = 'uniquefid'







Initialize Random-Forest
---------------------------



.. code-block:: python


    classifier = RandomForestClassifier(random_state=12)







Create list of different CV
---------------------------



.. code-block:: python


    CVs = [crossValidation.RandomCV(),
           crossValidation.LeavePSubGroupOut(),
           crossValidation.LeaveOneSubGroupOut(),
           StratifiedKFold() #from sklearn
           ]

    kappas=[]

    LAP = learnAndPredict()

    for cv in CVs : 
        
        LAP.learnFromRaster(raster,vector,inField=field,inGroup=group,cv=cv,
                            classifier=classifier,param_grid=dict(n_estimators=[100,200]))
        print('Kappa for '+str(type(cv).__name__))
        cvKappa = []
    
        for kappa in LAP.getStatsFromCV(confusionMatrix=False,kappa=True):
            print(kappa)
            cvKappa.append(kappa)
    
        kappas.append(cvKappa)
    
        print(20*'=')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Received groups value, but randomCV don't use it
    Fitting 5 folds for each of 2 candidates, totalling 10 fits
    best n_estimators : 200
    Kappa for RandomCV
    [0.94126836977040407]
    [0.9445235655078964]
    [0.94126836977040407]
    [0.9445235655078964]
    [0.94126836977040407]
    ====================
    Fitting 5 folds for each of 2 candidates, totalling 10 fits
    best n_estimators : 100
    Kappa for LeavePSubGroupOut
    [0.67801520805520388]
    [0.74558080975258245]
    [0.67801520805520388]
    [0.74558080975258245]
    [0.67801520805520388]
    ====================
    Fitting 2 folds for each of 2 candidates, totalling 4 fits
    best n_estimators : 200
    Kappa for LeaveOneSubGroupOut
    [0.74342330012819913]
    [0.65358340001044657]
    ====================
    Fitting 3 folds for each of 2 candidates, totalling 6 fits
    best n_estimators : 100
    Kappa for StratifiedKFold
    [0.9192439219495333]
    [0.87923405868862392]
    [0.80966792713243985]
    ====================


Plot example



.. code-block:: python



    from matplotlib import pyplot as plt
    plt.title('Kappa according to Cross-validation methods')
    plt.boxplot(kappas,labels=[str(type(i).__name__) for i in CVs], patch_artist=True)
    plt.grid()
    plt.ylabel('Kappa')
    plt.xticks(rotation=15)
    plt.show()



.. image:: /auto_examples/learnTools/images/sphx_glr_learnWithRFandCompareCV_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  37.014 seconds)


.. _sphx_glr_download_auto_examples_learnTools_learnWithRFandCompareCV.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: learnWithRFandCompareCV.py <learnWithRFandCompareCV.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: learnWithRFandCompareCV.ipynb <learnWithRFandCompareCV.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
