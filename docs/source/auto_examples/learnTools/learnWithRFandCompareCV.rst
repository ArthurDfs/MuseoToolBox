.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_learnTools_learnWithRFandCompareCV.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_learnTools_learnWithRFandCompareCV.py:


Learn with Random-Forest and  compare Cross-Validation methods
===============================================================

This example shows how to make a classification with different cross-validation methods



Import librairies
-------------------------------------------



.. code-block:: python


    from MuseoToolBox.crossValidationTools import RandomCV,LeavePSubGroupOut,LeaveOneSubGroupOut
    from MuseoToolBox import datasets,rasterTools,vectorTools
    from MuseoToolBox import learnTools
    from sklearn.ensemble import RandomForestClassifier







Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'
    group = 'uniquefid'







Initialize Random-Forest
---------------------------



.. code-block:: python


    classifier = RandomForestClassifier()







Initialize Random-Forest
---------------------------



.. code-block:: python


    CVs = [RandomCV(),LeavePSubGroupOut(),LeaveOneSubGroupOut()]
    kappas=[]
    for cv in CVs : 
        LAP = learnTools.learnAndPredict()
    
        ##############################################################################
        # Define group only when needed
    
        if cv == RandomCV():
            group=None
        else:
            group=group
        
        LAP.learnFromRaster(raster,vector,inField=field,inGroup=group,cv=cv,
                            classifier=classifier,param_grid=dict(n_estimators=[100,200]))
        print('Kappa for '+str(type(RandomCV()).__name__))
        cvKappa = []
    
        for kappa in LAP.getStatsFromCV(confusionMatrix=False,kappa=True):
            print(kappa)
            cvKappa.append(kappa)
    
        kappas.append(cvKappa)
    
        print(20*'=')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fitting 5 folds for each of 2 candidates, totalling 10 fits
    best n_estimators : 200
    Kappa for RandomCV
    [0.94285968078707694]
    [0.94466130404052151]
    [0.94439084090654746]
    [0.94148911023938175]
    [0.94290610032434508]
    ====================
    Fitting 5 folds for each of 2 candidates, totalling 10 fits
    best n_estimators : 200
    Kappa for RandomCV
    [0.87865624774811169]
    [0.77925469154618388]
    [0.70972664904892513]
    [0.78012451942974426]
    [0.69598230861370569]
    ====================
    Fitting 2 folds for each of 2 candidates, totalling 4 fits
    best n_estimators : 100
    Kappa for RandomCV
    [0.93437923300982351]
    [0.61251567714893407]
    ====================


Plot example



.. code-block:: python



    from matplotlib import pyplot as plt
    plt.title('Kappa according to Cross-validation methods')
    plt.boxplot(kappas,labels=[str(type(i).__name__) for i in CVs], patch_artist=True)
    plt.grid()
    plt.ylabel('Kappa')
    plt.show()



.. image:: /auto_examples/learnTools/images/sphx_glr_learnWithRFandCompareCV_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  32.061 seconds)


.. _sphx_glr_download_auto_examples_learnTools_learnWithRFandCompareCV.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: learnWithRFandCompareCV.py <learnWithRFandCompareCV.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: learnWithRFandCompareCV.ipynb <learnWithRFandCompareCV.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
