.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_learnTools_learnWithRFandRS50.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_learnTools_learnWithRFandRS50.py:


Learn with Random-Forest and Random Sampling 50% (RS50)
========================================================

This example shows how to make a Random Sampling with 
50% for each class.



Import librairies
-------------------------------------------



.. code-block:: python


    from MuseoToolBox.crossValidationTools import RandomCV
    from MuseoToolBox import datasets,rasterTools,vectorTools
    from MuseoToolBox import learnTools
    from sklearn.ensemble import RandomForestClassifier







Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.getHistoricalMap()
    field = 'Class'






Create CV
-------------------------------------------



.. code-block:: python

    RS50 = RandomCV(train_size=0.5,n_splits=10,
                    random_state=12,verbose=False)







Initialize Random-Forest
---------------------------



.. code-block:: python


    classifier = RandomForestClassifier()







Initialize Random-Forest
---------------------------



.. code-block:: python



    LAP = learnTools.learnAndPredict()
    LAP.learnFromRaster(raster,vector,field,cv=RS50,
                        classifier=classifier,param_grid=dict(n_estimators=[100,200]))
  
    for kappa in LAP.getStatsFromCV(confusionMatrix=False,kappa=True):
        print(kappa)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fitting 10 folds for each of 2 candidates, totalling 20 fits
    best n_estimators : 200
    [0.94635897652909906]
    [0.93926877916972007]
    [0.9424138426326939]
    [0.9439809301441302]
    [0.94286057027982639]
    [0.94247415327533202]
    [0.94190539222286984]
    [0.94625949356904848]
    [0.94642164578108168]
    [0.9395504758785389]


Initialize Random-Forest
---------------------------



.. code-block:: python

    
    LAP.predictFromRaster(raster,'/tmp/classification.tif')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Prediction...  [##################......................]45%    Prediction...  [####################################....]90%    Saved /tmp/classification.tif using function predictFromArray


Plot example



.. code-block:: python



    import numpy as np
    from matplotlib import pyplot as plt
    import gdal
    src=gdal.Open('/tmp/classification.tif')
    plt.imshow(src.GetRasterBand(1).ReadAsArray(),cmap=plt.get_cmap('tab20'))
    plt.axis('off')
    plt.show()



.. image:: /auto_examples/learnTools/images/sphx_glr_learnWithRFandRS50_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  36.258 seconds)


.. _sphx_glr_download_auto_examples_learnTools_learnWithRFandRS50.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: learnWithRFandRS50.py <learnWithRFandRS50.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: learnWithRFandRS50.ipynb <learnWithRFandRS50.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
