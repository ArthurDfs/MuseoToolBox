.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_raster_tools_modalClass.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_raster_tools_modalClass.py:


Modal class and number of agreements
===============================================================

Create a raster with the modal class and the number of agreements.


Import librairies
-------------------------------------------


.. code-block:: default


    import museotoolbox as mtb
    from scipy import stats
    import numpy as np






Load HistoricalMap dataset
-------------------------------------------


.. code-block:: default


    raster,vector = mtb.datasets.historicalMap(low_res=True)







Initialize rasterMath with raster
-----------------------------------------


.. code-block:: default


    ########
    # In case you want to add a mask
    mask = '/tmp/maskFromPolygons.tif'
    mtb.raster_tools.rasterMaskFromVector(vector,raster,mask,invert=False)

    rM = mtb.raster_tools.rasterMath(raster,inMaskRaster=mask)

    print(rM.getRandomBlock())




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Total number of blocks : 18
    [[161 152  92]
     [164 154  93]
     [167 156  95]
     ...
     [130 132 106]
     [110 109  82]
     [ 88  88  78]]


Let's suppose you want compute the modal classification between several predictions
The first band will be the most predicted class, and the second the number of times it has been predicted.


.. code-block:: default



    x = rM.getRandomBlock()

    def modalClass(x):
        tmp = stats.mode(x,axis=1)
        tmpStack = np.column_stack((tmp[0], tmp[1])).astype(np.int16)
        return tmpStack

    rM.addFunction(modalClass,outRaster='/tmp/modal.tif',outNoData=0)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using datatype from numpy table : int16.
    Detected 2 bands for function modalClass.
    No data is set to : 0


Run the script


.. code-block:: default


    rM.run()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    rasterMath... [........................................]0%    rasterMath... [##......................................]5%    rasterMath... [####....................................]11%    rasterMath... [######..................................]16%    rasterMath... [########................................]22%    rasterMath... [###########.............................]27%    rasterMath... [#############...........................]33%    rasterMath... [###############.........................]38%    rasterMath... [#################.......................]44%    rasterMath... [####################....................]50%    rasterMath... [######################..................]55%    rasterMath... [########################................]61%    rasterMath... [##########################..............]66%    rasterMath... [############################............]72%    rasterMath... [###############################.........]77%    rasterMath... [#################################.......]83%    rasterMath... [###################################.....]88%    rasterMath... [#####################################...]94%    rasterMath... [########################################]100%
    Saved /tmp/modal.tif using function modalClass


Plot result


.. code-block:: default


    import gdal
    from matplotlib import pyplot as plt 

    src = gdal.Open('/tmp/modal.tif')
    plt.imshow(src.ReadAsArray()[0,:,:])



.. image:: /auto_examples/raster_tools/images/sphx_glr_modalClass_001.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.309 seconds)


.. _sphx_glr_download_auto_examples_raster_tools_modalClass.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: modalClass.py <modalClass.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: modalClass.ipynb <modalClass.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
