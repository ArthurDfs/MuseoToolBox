.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_raster_tools_rasterMath.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_raster_tools_rasterMath.py:


Basics to use rasterMath
===============================================================

Compute substract and addition between two raster bands.



Import librairies
-------------------------------------------



.. code-block:: python


    from museotoolbox.raster_tools import rasterMath
    from museotoolbox import datasets
    import numpy as np






Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = datasets.historicalMap()







Initialize rasterMath with raster
------------------------------------



.. code-block:: python


    rM = rasterMath(raster)

    print(rM.getRandomBlock())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[160 148 124]
     [154 142 118]
     [188 176 152]
     ..., 
     [187 164 132]
     [193 166 136]
     [178 152 119]]


Let's suppose you want compute the difference between blue and green band
I suggest you to define type in numpy array to save space while creating the raster!



.. code-block:: python


    x = rM.getRandomBlock()

    def sub(x):
        return np.array((x[:,0]-x[:,1])).astype(np.int16) 

    def add(x,constant=0):
    
        return np.array((x[:,0]+x[:,1]+constant)).astype(np.int16) 

    rM.addFunction(sub,outRaster='/tmp/sub.tif')
    rM.addFunction(add,outRaster='/tmp/add.tif',constant=10)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using datatype from numpy table : int16
    Using datatype from numpy table : int16


Run the script



.. code-block:: python


    rM.run()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    rasterMath...  [........................................]0%    rasterMath...  [##......................................]7%    rasterMath...  [#####...................................]14%    rasterMath...  [########................................]21%    rasterMath...  [###########.............................]28%    rasterMath...  [##############..........................]35%    rasterMath...  [#################.......................]42%    rasterMath...  [####################....................]50%    rasterMath...  [######################..................]57%    rasterMath...  [#########################...............]64%    rasterMath...  [############################............]71%    rasterMath...  [###############################.........]78%    rasterMath...  [##################################......]85%    rasterMath...  [#####################################...]92%    rasterMath...  [########################################]100%
    Saved /tmp/sub.tif using function sub
    Saved /tmp/add.tif using function add


Plot result



.. code-block:: python


    import gdal
    from matplotlib import pyplot as plt 

    src = gdal.Open('/tmp/add.tif')
    plt.imshow(src.ReadAsArray())



.. image:: /auto_examples/raster_tools/images/sphx_glr_rasterMath_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  0.412 seconds)


.. _sphx_glr_download_auto_examples_raster_tools_rasterMath.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: rasterMath.py <rasterMath.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: rasterMath.ipynb <rasterMath.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
