.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_stats_zonal_stats.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_stats_zonal_stats.py:


Compute quality index from confusion matrix
===============================================================

Compute different quality index  (OA, Kappa and F1) directly
from confusion matrix.


Import librairies
-------------------------------------------


.. code-block:: default

    import numpy as np
    from museotoolbox.stats import zonal_stats
    from museotoolbox.datasets import load_historical_data







Load dataset
-------------------------------------------


.. code-block:: default


    raster,vector = load_historical_data()







Compute mean and variance per polygon
----------------------------------------------------


.. code-block:: default

    mean,var = zonal_stats(raster,vector,'uniquefid',stats=['mean','var'])
    print(mean.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (17, 3)


Show mean value


.. code-block:: default

    print('For polygon 1 : ')
    for band_idx,band in enumerate(['blue','green','red']):
        print('Mean value in {} band is : {}'.format(band,mean[0,band_idx]))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    For polygon 1 : 
    Mean value in blue band is : 117.75219446320054
    Mean value in green band is : 109.80958811613775
    Mean value in red band is : 79.64213369345038


Show variance value    


.. code-block:: default

    print('For polygon 1 : ')
    for band_idx,band in enumerate(['blue','green','red']):
        print('Variance value in {} band is : {}'.format(band,var[0,band_idx]))
    




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    For polygon 1 : 
    Variance value in blue band is : 1302.2998348197116
    Variance value in green band is : 1250.5998000329173
    Variance value in red band is : 1015.766597473011


You can put in stats, every numpy function

For example here : mean, median, max, min


.. code-block:: default

    
    mean,median,amax,amin = zonal_stats(raster,vector,'uniquefid',stats=['mean','median','max','min'])

    print('For polygon 1 : ')
    for band_idx,band in enumerate(['blue','green','red']):
        print('Min value in {} band is : {}'.format(band,amin[0,band_idx]))
        print('Max value in {} band is : {}'.format(band,amax[0,band_idx]))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    For polygon 1 : 
    Min value in blue band is : 32.0
    Max value in blue band is : 196.0
    Min value in green band is : 24.0
    Max value in green band is : 186.0
    Min value in red band is : 1.0
    Max value in red band is : 155.0



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_stats_zonal_stats.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: zonal_stats.py <zonal_stats.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: zonal_stats.ipynb <zonal_stats.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
