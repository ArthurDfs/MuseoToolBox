.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_vectorTools_copyRasterInVectorFields.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_vectorTools_copyRasterInVectorFields.py:


Copy raster values in vector fields then read vector
======================================================

This example shows how to extract from polygons or points
each pixel centroid located in the vector (polygons/points)
and how to extract and save band values in vector fields.
 
This tool is made to avoid using raster everytime you need
to learn and predict a model.

Import librairies
-------------------------------------------



.. code-block:: python


    import museotoolbox as mtb
    from matplotlib import pyplot as plt







Load HistoricalMap dataset
-------------------------------------------



.. code-block:: python


    raster,vector = mtb.datasets.getHistoricalMap()
    outVector='/tmp/vector_withROI.gpkg'








.. note::
   There is no need to specify a bandPrefix. 
   If bandPrefix is not specified, scipt will only generate the centroid



.. code-block:: python


    mtb.vectorTools.sampleExtraction(raster,vector,
                                     outVector=outVector,
                                     uniqueFID='uniquefid',
                                     bandPrefix='band_',
                                     verbose=False)








Read values from both vectors



.. code-block:: python


    originalY = mtb.vectorTools.readValuesFromVector(vector,'Class')
    extractedY,X = mtb.vectorTools.readValuesFromVector(outVector,'Class',bandPrefix='band_')







Original vector is polygon type, each polygons contains multiple pixel



.. code-block:: python


    print(originalY.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (17,)


Number of Y in the new vector is the total number of pixel in the polygons



.. code-block:: python


    print(extractedY.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (12647,)


X has the same size of Y, but in 3 dimensions because our raster has 3 bands



.. code-block:: python


    print(X.shape)
    print(X[410:420,:])
    print(extractedY[410:420])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (12647, 3)
    [[147 130 120]
     [155 139 126]
     [213 189 155]
     [217 192 161]
     [211 186 155]
     [206 181 151]
     [207 182 152]
     [213 188 158]
     [216 191 161]
     [213 188 158]]
    [2 2 3 3 3 3 3 3 3 3]


Plot blue and red band



.. code-block:: python


    plt.figure(1)
    colors =  [int(i % 23) for i in extractedY]
    plt.scatter(X[:,0],X[:,2],c=colors,alpha=.8)
    plt.show()




.. image:: /auto_examples/vectorTools/images/sphx_glr_copyRasterInVectorFields_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  2.056 seconds)


.. _sphx_glr_download_auto_examples_vectorTools_copyRasterInVectorFields.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: copyRasterInVectorFields.py <copyRasterInVectorFields.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: copyRasterInVectorFields.ipynb <copyRasterInVectorFields.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
